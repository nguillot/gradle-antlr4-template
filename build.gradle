description = "ANTLR4 project template"
apply plugin: 'java'
apply from: file('gradle/idea.gradle')

ext.versions = [
        slf4j: "1.7.19",
        logback: "1.1.6",
        junit: "4.12",
	antlr: "4.5.2-1"
]

ext.antlr = [
        grammarpackage: "org.carpediem",
        antlrSource: 'src/main/antlr',
        destinationDir: "src/generated-sources/java"
]

repositories {
    mavenCentral()
}

configurations {
    antlr4 {
        description = "ANTLR4"
    }
}

dependencies {
    compile group: "org.slf4j", name: "slf4j-api", version: versions.slf4j
    compile group: "ch.qos.logback", name: "logback-classic", version: versions.logback
    compile group: "org.antlr", name: "antlr4-runtime", version: versions.antlr
    antlr4 group: "org.antlr", name: "antlr4", version: "4.5.2-1"
    testCompile group: "junit", name: "junit", version: versions.junit
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties = System.getProperties()
    testLogging.showStandardStreams = true
}

task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)

    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-visitor", "-package", antlr.grammarpackage, grammars.files].flatten()

}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}

clean {
    delete antlr.destinationDir
}
